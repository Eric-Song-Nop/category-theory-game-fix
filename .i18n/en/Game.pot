msgid ""
msgstr "Project-Id-Version: Game v4.7.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: Wed Jun 19 18:14:22 2024\n"
"Last-Translator: \n"
"Language-Team: none\n"
"Language: en\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit"

#: GameServer.RpcHandlers
msgid "level completed! 🎉"
msgstr ""

#: GameServer.RpcHandlers
msgid "level completed with warnings… 🎭"
msgstr ""

#: GameServer.RpcHandlers
msgid "intermediate goal solved! 🎉"
msgstr ""

#: Game.Levels.CatWorld.L01_HelloWorld
msgid "Hello Category Theory World!"
msgstr ""

#: Game.Levels.CatWorld.L01_HelloWorld
msgid "First we start out with some easy lemmas to get us warmed up.\n"
"\n"
"If $$f : X ⟶ Y$$ and $$g : X ⟶ Y$$ are morphisms such that $$f = g$$, then $$f ≫ h = g ≫ h$$."
msgstr ""

#: Game.Levels.CatWorld.L01_HelloWorld
msgid "You can easily solve this using `«{w}»`."
msgstr ""

#: Game.Levels.CatWorld.L01_HelloWorld
msgid "Not hard!"
msgstr ""

#: Game.Levels.CatWorld.L01_HelloWorld
msgid "use `rw` to rewrite!"
msgstr ""

#: Game.Levels.CatWorld.L02_Simple2
msgid "Another easy lemma"
msgstr ""

#: Game.Levels.CatWorld.L02_Simple2
msgid "First we start out with some easy lemmas to get us warmed up.\n"
"\n"
"If $$f : X ⟶ Y$$ and $$g : X ⟶ Y$$ are morphisms such that $$f = g$$, then $$f ≫ h = g ≫ h$$."
msgstr ""

#: Game.Levels.CatWorld.L02_Simple2
msgid "You can easily solve this using `«{w}»`."
msgstr ""

#: Game.Levels.CatWorld.L02_Simple2
msgid "Easy right?"
msgstr ""

#: Game.Levels.CatWorld.L03_Specialize
msgid "right identity"
msgstr ""

#: Game.Levels.CatWorld.L03_Specialize
msgid "Given two morphisms composing with the same morphism are equal, we can conclude that they are equal.\n"
"\n"
"If $$f : X ⟶ Y$$ and $$g : X ⟶ Y$$ are morphisms such that $$f ∘ h = g ∘ h$$, then $$f = g$$.\n"
"\n"
"We will make use of the identity axiom: $f ≫ 𝟙 Y = f$ to prove this."
msgstr ""

#: Game.Levels.CatWorld.L03_Specialize
msgid "Given two morphisms composing with the same morphism are equal, we can conclude that they are equal."
msgstr ""

#: Game.Levels.CatWorld.L03_Specialize
msgid "Consider the special case when `h` is the identity morphism, you can write an identity morphism on Category `«{Y}»` as `𝟙 Y`."
msgstr ""

#: Game.Levels.CatWorld.L03_Specialize
msgid "Try to simplify the `f` compose `id` part"
msgstr ""

#: Game.Levels.CatWorld.L03_Specialize
msgid "Easy right?"
msgstr ""

#: Game.Levels.CatWorld.L03_Specialize
msgid "use the `specialize` tactic to give a specify case for proof!"
msgstr ""

#: Game.Levels.CatWorld.L03_Specialize
msgid "Apply the exactly same condition or theorem to finish the proof."
msgstr ""

#: Game.Levels.CatWorld.L03_Specialize
msgid "A morphism `f` is equal to `f` composed with the identity morphism.\n"
"`f = f ≫ 𝟙 X`"
msgstr ""

#: Game.Levels.CatWorld.L04_Specialize2
msgid "left identity"
msgstr ""

#: Game.Levels.CatWorld.L04_Specialize2
msgid "Given two morphisms composing with the same morphism are equal, we can conclude that they are equal.\n"
"\n"
"If $$f : Y ⟶ Z$$ and $$g : Y ⟶ Z$$ are morphisms such that $$h ≫ f = h ≫ g$$, then $$f = g$$.\n"
"\n"
"This lemma is similar to the previous one, but the morphisms are in the reversed order.\n"
"We will make use of the identity axiom: $𝟙 ≫ X = f$ to prove this."
msgstr ""

#: Game.Levels.CatWorld.L04_Specialize2
msgid "Given two morphisms composed with the same morphism are equal, we can conclude that they are equal."
msgstr ""

#: Game.Levels.CatWorld.L04_Specialize2
msgid "Consider the special case when `h` is the identity morphism, you can write an identity morphism on Category `«{Y}»` as `𝟙 Y`."
msgstr ""

#: Game.Levels.CatWorld.L04_Specialize2
msgid "Try to simplify the `id` compose `f` part"
msgstr ""

#: Game.Levels.CatWorld.L04_Specialize2
msgid "We call this equal of left equal lemma."
msgstr ""

#: Game.Levels.CatWorld.L04_Specialize2
msgid "use the `specialize` tactic to give a specify case for proof!"
msgstr ""

#: Game.Levels.CatWorld.L04_Specialize2
msgid "Apply the exactly same condition or theorem to finish the proof."
msgstr ""

#: Game.Levels.CatWorld.L04_Specialize2
msgid "A morphism `f` is equal to identity morphism compose with `f`.\n"
"This is the left identity law of category theory, reverse of `comp_id`.\n"
"`f = 𝟙 X ≫ f`"
msgstr ""

#: Game.Levels.CatWorld.L05_id_comp
msgid "Only `𝟙` left"
msgstr ""

#: Game.Levels.CatWorld.L05_id_comp
msgid "Only `𝟙` compose with `g` gets `g`."
msgstr ""

#: Game.Levels.CatWorld.L05_id_comp
msgid "Consider the lemma `eq_of_comp_left_eq` or `eq_of_comp_right_eq` that we have proved in the previous level."
msgstr ""

#: Game.Levels.CatWorld.L05_id_comp
msgid ""
msgstr ""

#: Game.Levels.CatWorld.L05_id_comp
msgid "We call this `id_of_comp_left_id`"
msgstr ""

#: Game.Levels.CatWorld.L05_id_comp
msgid "use the `specialize` tactic to give a specify case for proof!"
msgstr ""

#: Game.Levels.CatWorld.L05_id_comp
msgid "Apply the exactly same condition or theorem to finish the proof."
msgstr ""

#: Game.Levels.CatWorld.L05_id_comp
msgid "Apply the condition or theorem to goal."
msgstr ""

#: Game.Levels.CatWorld.L05_id_comp
msgid "Introduces one or more hypotheses, optionally naming and/or pattern-matching them.\n"
"  For each hypothesis to be introduced, the remaining main goal's target type must\n"
"  be a `let` or function type."
msgstr ""

#: Game.Levels.CatWorld.L05_id_comp
msgid "[[mathlib_doc]]\n"
"A morphism `f` is equal to identity morphism compose with `f`.\n"
"This is the left identity law of category theory, reverse of `comp_id`.\n"
"`f = 𝟙 X ≫ f`"
msgstr ""

#: Game.Levels.CatWorld.L05_id_comp
msgid "[[mathlib_doc]]\n"
"Given two morphisms composing with the same morphism are equal, we can conclude that they are equal."
msgstr ""

#: Game.Levels.CatWorld
msgid "Cat World"
msgstr ""

#: Game.Levels.CatWorld
msgid "Let's learn some category theory!\n"
"\n"
"## Definition of category\n"
"\n"
"A category `C` consists of\n"
"  * a collection of objects `X, Y, Z, ...`\n"
"  * a collection of morphisms `f, g, h, ...`\n"
"so that:\n"
"  * each morphism has specified domain and codomain objects;\n"
"    `f : X ⟶ Y` signifies that `f` is a morphism with\n"
"    domain `X` and codomain `Y`\n"
"  * each object has a designated identity morphism `𝟙 X : X ⟶ X`\n"
"  * for any pair of morphisms `f, g` with the codomain of `f` equal\n"
"    to the domain of `g`,the exists a specified composite morphism\n"
"    `f ≫ g` whose domain is that of `f` and codomain that of `g`,\n"
"    i.e. `f : X ⟶ Y, g : Y ⟶ Z` then `f ≫ g : X ⟶ Z`\n"
"This data is subject to the following axioms:\n"
"  * For any `f : X ⟶ Y`,\n"
"  -/\n"
"  /- Axiom :\n"
"    f ≫ 𝟙 Y = f-/\n"
"  /- Axiom:\n"
"    𝟙 X ≫ f = f-/\n"
"\n"
"  /-* For any composable triple of morphisms `f, g, h`, we have associativity\n"
"  `f ≫ (g ≫ h) = (f ≫ g) ≫ h`-/\n"
"  /- Axiom:\n"
"    f ≫ (g ≫ h) = (f ≫ g) ≫ h-/"
msgstr ""

#: Game
msgid "Hello World Game"
msgstr ""

#: Game
msgid "This text appears on the starting page where one selects the world/level to play.\n"
"You can use markdown."
msgstr ""

#: Game
msgid "Here you can put additional information about the game. It is accessible\n"
"from the starting through the drop-down menu.\n"
"\n"
"For example: Game version, Credits, Link to Github and Zulip, etc.\n"
"\n"
"Use markdown."
msgstr ""

#: Game
msgid "Game Template"
msgstr ""

#: Game
msgid "You should use this game as a template for your own game and add your own levels."
msgstr ""
